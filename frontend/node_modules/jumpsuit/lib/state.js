'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (stateName, actions, detached) {
  var intialState = actions.initial || {};
  delete actions.initial;

  var prefixedActions = {};

  var reducerWithActions = function reducerWithActions() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? intialState : arguments[0];
    var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    if (!prefixedActions[action.type]) {
      return state;
    }

    return Object.assign({}, state, prefixedActions[action.type](state, action.payload));
  };

  var detachedState = detached ? reducerWithActions() : null;

  reducerWithActions._name = stateName;

  Object.keys(actions).forEach(function (actionName) {
    if (!detached) {
      reducerWithActions[actionName] = function (payload) {
        return reducerWithActions.dispatch({
          type: stateName + '_' + actionName,
          payload: payload
        });
      };
    } else {
      reducerWithActions[actionName] = function (payload) {
        detachedState = reducerWithActions(detachedState, {
          type: stateName + '_' + actionName,
          payload: payload
        });
        return detachedState;
      };
    }

    prefixedActions[stateName + '_' + actionName] = actions[actionName];

    if (process.env.NODE_ENV === 'testing') {
      reducerWithActions['_' + actionName] = actions[actionName];
    }
  });

  if (detached) {
    return Object.assign(reducerWithActions, {
      getState: function getState() {
        return detachedState;
      }
    });
  }

  return reducerWithActions;
};